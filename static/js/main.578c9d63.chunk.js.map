{"version":3,"sources":["components/NavBar.js","components/Product.js","components/ShowProduct.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","itemCount","showProductList","className","type","onClick","Product","product","addToCart","updateQuantity","map","item","key","id","style","width","src","imageurl","alt","name","description","price","value","quantity","min","max","onChange","e","target","ShowProduct","backToShop","deleteItem","scope","height","fialsetTotal","sumPrice","realArray","Object","values","parseInt","i","length","totalPrice","App","useState","cartCount","setCartCount","setItemCount","showProduct","setShowProduct","uuid","setProduct","newProduct","console","log","Fragment","addToCartCount","filter","deletedItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.578c9d63.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction NavBar({ itemCount, showProductList }) {\r\n\r\n    return (\r\n        <div className=\"my-2\"> \r\n            <nav className=\"navbar navbar-dark bg-primary\">\r\n                <h1 className=\"text-center text-white\"> Simple React Product Store </h1>\r\n                <span className=\"float-right\"> \r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-outline-light\"\r\n                        onClick={showProductList}\r\n                    >\r\n                        Cart {\" \"}\r\n                        <span className=\"badge badge-light\">\r\n                             {itemCount}\r\n                        </span>\r\n                    </button>\r\n                </span>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\n\r\nfunction Product({ product, addToCart, updateQuantity }) {\r\n\r\n    return(\r\n        <div className=\"row mt-3\">\r\n                { product.product.map( item => (\r\n                <div key={item.id} className=\"card mx-4 my-3\" style={ { width: '18rem' }}>\r\n                    <img src={item.imageurl} className=\"card-img-top\" alt=\"Vivo z1\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"> { item.name } </h5>\r\n                        <p className=\"card-text\"> { item.description } </p>\r\n                        <button \r\n                            className={ item.addToCart === true ? \"btn btn-secondary disabled\" : \"btn btn-primary\" }\r\n                            onClick={ ()=> addToCart(item.id) }\r\n                        >\r\n                            { item.addToCart === true ? \"Alread Added\" : \"Add to Cart\" }\r\n                        </button>\r\n                        <span className=\"text-success font-weight-bold float-right mr-2\"> ${ item.price } </span>\r\n                        <div className=\"form-group row mt-2\">\r\n                            <h6 className=\"pl-3 pt-2\"> Select Quantity :</h6>\r\n                            <div className=\"col-6\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    type=\"number\" \r\n                                    name=\"quantity\" \r\n                                    value={item.quantity} \r\n                                    id=\"quantity\"\r\n                                    min=\"1\" \r\n                                    max=\"10\"\r\n                                    onChange={ (e) => updateQuantity(item.id, e.target.value) } \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\n\r\nfunction ShowProduct({ product, backToShop, deleteItem, updateQuantity }) {\r\n    const totalPrice = () => {\r\n        let sumTotal = 0;\r\n        let fialsetTotal = 0;\r\n        let sumPrice = product.map( item => {\r\n            let realArray = Object.values(item).map( item => item )\r\n            sumTotal = (parseInt(realArray[5]) * parseInt(realArray[6]) );\r\n            //sumTotal.reduce((x, y) => x + y)\r\n            //sumTotal.reduce( (a,b)=> a + b, 0 )\r\n            //console.log(sumTotal.reduce((a, b) => a + b, 0));\r\n            return sumTotal;\r\n            \r\n         })\r\n         for( let i = 0; i<sumPrice.length; i++  ){\r\n            fialsetTotal += sumPrice[i];\r\n         }\r\n         return fialsetTotal;\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-sm-12\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Qantatity</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Sub Total</th>\r\n                        <th scope=\"col\"> Delete Item </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { product.map( item=> (\r\n                            <tr key={item.id} >\r\n                                <th scope=\"row\"> {item.id} </th>\r\n                                <td> {item.name} </td>\r\n                                <td> <img alt={item.name} src={item.imageurl} style={ { height: 40, width: 50 } } /> </td>\r\n                                <td> \r\n                                    <div className=\"form-group row mt-2\">\r\n                                        <div className=\"col-6\">\r\n                                            <input \r\n                                                className=\"form-control\"\r\n                                                style={ { width: 80 } } \r\n                                                type=\"number\" \r\n                                                name=\"quantity\" \r\n                                                value={item.quantity} \r\n                                                id=\"quantity\"\r\n                                                min=\"1\"\r\n                                                max=\"10\"\r\n                                                onChange={ (e) => updateQuantity(item.id, e.target.value) } \r\n                                            />\r\n                                        </div>\r\n                                    </div> \r\n                                </td>\r\n                                <td> ${item.price} </td>\r\n                                <td id=\"subtotal\"> ${item.quantity*item.price} { `(${item.quantity} X ${item.price})` } </td>\r\n                                <td> \r\n                                    <button \r\n                                        className=\"btn btn-danger mb-5\"\r\n                                        onClick={ ()=> deleteItem(item.id) }\r\n                                    > Delete \r\n                                    </button>  \r\n                                </td>\r\n                            </tr>\r\n                        )) }\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"float-right\">\r\n                    <h1 className=\"text-success mb-2\"> Total Amount: \r\n                        ${ totalPrice() }\r\n                    </h1>\r\n                    <button \r\n                        className=\"btn btn-primary mt-2 float-right\"\r\n                        onClick={backToShop}\r\n                    > Back To Shop \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ShowProduct;","import React, { useState } from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Product from './components/Product';\r\nimport ShowProduct from './components/ShowProduct';\r\nimport uuid from 'uuid/v4';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [cartCount, setCartCount] = useState([]);\r\n  const [itemCount, setItemCount] = useState(0);\r\n  const [showProduct, setShowProduct] = useState(false);\r\n  const [product, setProduct] = useState({ product: [\r\n    { \r\n        id: uuid(), \r\n        name: 'Samsung', \r\n        description: 'This is a great phone by Samsung',\r\n        imageurl : 'https://i.ebayimg.com/images/a/(KGrHqN,!rMFGlb1RbFnBR0W79Fshw~~/s-l300.jpg',\r\n        addToCart: false,\r\n        price: 10,\r\n        quantity: 1\r\n    },\r\n    { \r\n        id: uuid(), \r\n        name: 'Motorola', \r\n        description: 'This is a great phone by Motorola',\r\n        imageurl : 'https://cdn.pocket-lint.com/r/s/300x/assets/images/148977-phones-news-motorola-image1-zektoesbcv.png', \r\n        addToCart: false,\r\n        price: 11,\r\n        quantity: 1 \r\n    },\r\n    { \r\n        id: uuid(), \r\n        name: 'Iphone', \r\n        description: 'This is a great phone by Iphone',\r\n        imageurl : 'https://i-cdn.phonearena.com/images/article/116772-two_thumb/Apple-had-the-worst-first-quarter-in-European-smartphone-market-in-five-years.jpg',\r\n        addToCart: false,\r\n        price: 12,\r\n        quantity: 1 \r\n    },\r\n    { \r\n        id: uuid(), \r\n        name: 'Xiaomi', \r\n        description: 'This is a great phone by Xiaomi',\r\n        imageurl : 'https://www.xiaomidrivers.com/wp-content/uploads/2019/05/xiaomidrivers.com_-18.jpg', \r\n        addToCart: false,\r\n        price: 15,\r\n        quantity: 1 \r\n    },\r\n    { \r\n        id: uuid(), \r\n        name: 'Huawei', \r\n        description: 'This is a great phone by Huawei',\r\n        imageurl : 'https://i-cdn.phonearena.com/images/article/117830-two_thumb/Samsung-gets-its-mojo-back-and-Huawei-defies-the-odds-in-Q2-2019-smartphone-market-reports.jpg', \r\n        addToCart: false,\r\n        price: 20,\r\n        quantity: 1 \r\n    },\r\n    { \r\n      id: uuid(), \r\n      name: 'Nokia', \r\n      description: 'This is a great phone by Huawei',\r\n      imageurl : 'https://i-cdn.phonearena.com/images/article/118339-two_thumb/Budget-friendly-Nokia-3-V-arrives-at-Verizon-on-August-23.jpg', \r\n      addToCart: false,\r\n      price: 30,\r\n      quantity: 1 \r\n    }\r\n] });\r\n\r\n  const addToCart = (id) => {\r\n    //console.log(id);\r\n    let newProduct = product.product.map( item => {\r\n      if (item.id === id){\r\n        item.addToCart = true\r\n      }\r\n      return item;\r\n    });\r\n    setProduct( {product: newProduct, ...product } );\r\n    //console.log(product);\r\n    let addToCartCount = product.product.filter( item => item.addToCart === true );\r\n    setCartCount(addToCartCount);\r\n    setItemCount(addToCartCount.length);\r\n    //console.log(itemCount);\r\n  }\r\n\r\n  const showProductList = () => {\r\n    setShowProduct(true);\r\n  }\r\n  const backToShop = () => {\r\n    setShowProduct(false);\r\n  }\r\n  const deleteItem = (id) => {\r\n      cartCount.filter( item => {\r\n      if(item.id === id){\r\n        return item.addToCart = false\r\n      }\r\n      return item; \r\n    });\r\n    //console.log(setReturn);\r\n    let deletedItem = cartCount.filter( item => item.id !== id );\r\n    setItemCount(deletedItem.length);\r\n    setCartCount(deletedItem);\r\n  }\r\n  const updateQuantity = (id, value) => {\r\n      let newProduct = product.product.map( item => {\r\n        if (item.id === id){\r\n          item.quantity = value\r\n        }\r\n        return item;\r\n      });\r\n      setProduct( {product: newProduct, ...product } );\r\n      if(value === 0){\r\n        console.log(\"value 0\");\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <NavBar \r\n        product={product}\r\n        itemCount={itemCount}\r\n        showProductList={showProductList}\r\n      />\r\n      { showProduct === false ? (\r\n        <React.Fragment> \r\n          <Product \r\n            product={product}\r\n            addToCart={addToCart}\r\n            updateQuantity={updateQuantity}\r\n          />\r\n        </React.Fragment>\r\n      ) : \r\n      <ShowProduct \r\n        product={cartCount}\r\n        backToShop={backToShop}\r\n        deleteItem={deleteItem}\r\n        updateQuantity={updateQuantity}\r\n      /> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}